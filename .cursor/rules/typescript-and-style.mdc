---
globs: *.ts,*.tsx
description: TypeScript, exports, and style guidance
---
### TypeScript and style

- Prefer explicit function signatures for public APIs; avoid `any`
- Use descriptive names; keep code readable and high-verbosity where helpful
- Use guard clauses and handle error/edge cases early
- Avoid deep nesting; keep control-flow shallow
- Add concise comments for non-obvious logic; avoid TODOs (implement instead)
- Match existing formatting; use Prettier and ESLint rules
- Use Standard Schema for input validation via `inputSchema()` when applicable
- Respect cancellation with `cancelSignal`/`shutdownSignal` in long-running operations

Repo config references:

- ESLint config: each package `eslint.config.mjs`
- TS build configs: `tsconfig.json`, `tsconfig.build.json`
- ESM modules and Node >= 20 per packagesâ€™ `package.json`
